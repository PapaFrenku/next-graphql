import { gql, useQuery } from "@apollo/client";
import _ from "lodash";
import Head from "next/head";
import Image from "next/image";
import React from "react";
import { Advantages } from "../components/Advantages";
import { Button } from "../components/Button";
import { ButtonIcon } from "../components/ButtonIcon";
import { Card } from "../components/Card";
import { Product } from "../components/Product";
import { Rating } from "../components/Rating";
import { Review } from "../components/Review";
import { ReviewForm } from "../components/ReviewForm";
import { Search } from "../components/Search";
import { Sort, SortEnum } from "../components/Sort";
import { Tag } from "../components/Tag";
import { Textarea } from "../components/Textarea";
import { Product as ProductType } from "../generated/types";
import styles from "../styles/Home.module.scss";

export const ALL_PRODUCTS_QUERY = gql`
  query products {
    products(findAllProductDto: {}) {
      id
      image
      title
      link
      initialRating
      price
      oldPrice
      credit
      description
      advantages
      disAdvantages
      categories
      tags
      characteristics {
        id
        name
        value
        productId
      }
      createdAt
      updatedAt
      reviewAvg
      reviews {
        id
        title
        name
        description
        rating
        productId
        createdAt
        updatedAt
      }
    }
  }
`;

export default function Home(): JSX.Element {
  const { loading, error, data, fetchMore, networkStatus } = useQuery<
    {products: ProductType[]}
  >(ALL_PRODUCTS_QUERY, {
    notifyOnNetworkStatusChange: true,
  });

  console.log(data);
  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        {/* <Button arrow="down" appearance="primary" fullWidth>
          <span>Кнопка</span>
        </Button>
        <Search />

        <Textarea />
        <Tag size="m" color="primary" href="">
          <span>Tag 1</span>
        </Tag>
        <Rating isEditable rating={2} />
        <ReviewForm isOpened productId={1} />
        {data &&
          data.products.map((item) => <Product product={_.omit(item, "__typename")} />)} */}
          <ButtonIcon icon="up" appearance="primary" />
          <ButtonIcon icon="up" appearance="white" />
          <ButtonIcon icon="menu" appearance="primary" />
          <ButtonIcon icon="menu" appearance="white" />
          <ButtonIcon icon="close" appearance="primary" />
          <ButtonIcon icon="close" appearance="white" />
          <Advantages advantages={[{title: 'asdasd', description: 'asdsd'}]}/>
          <Sort sort={SortEnum.Price} setSort={(sort) => {
            console.log(sort);
          }}/>
      </main>

      <footer className={styles.footer}>
        <a
          href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by{" "}
          <span className={styles.logo}>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
        </a>
      </footer>
    </div>
  );
}
