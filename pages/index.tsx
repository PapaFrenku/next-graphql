import { gql, useQuery } from "@apollo/client";
import _, { groupBy } from "lodash";
import { GetStaticProps } from "next";
import Head from "next/head";
import Image from "next/image";
import React from "react";
import { initializeApollo, addApolloState } from "../lib/apolloClient";
import {
  Product as ProductType,
  TopLevelCategory,
  TopPageEntity,
} from "../generated/types";
import styles from "../styles/Home.module.scss";
import { withLayout } from "../components/layout/Layout";
import { ALL_TOP_PAGES } from "../components/layout/Menu";
import { Menu } from "../context/app.context";

export const ALL_PRODUCTS_QUERY = gql`
  query products {
    products(findAllProductDto: {}) {
      id
      image
      title
      link
      initialRating
      price
      oldPrice
      credit
      description
      advantages
      disAdvantages
      categories
      tags
      characteristics {
        id
        name
        value
        productId
      }
      createdAt
      updatedAt
      reviewAvg
      reviews {
        id
        title
        name
        description
        rating
        productId
        createdAt
        updatedAt
      }
    }
  }
`;

type HomeProps = {
  menu: Menu,
  firstСategories: TopLevelCategory[];
};

const Home:React.FC<HomeProps> = (props) => {
  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      
      <main className={styles.main}></main>

      <footer className={styles.footer}>
        <a
          href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by{" "}
          <span className={styles.logo}>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
        </a>
      </footer>
    </div>
  );
};

// export const getStaticProps: GetStaticProps<any> = async (context) => {
//   const apolloClient = initializeApollo();
//   const res = await apolloClient.query<{ getAllTopPages: TopPageEntity[] }>({
//     query: ALL_TOP_PAGES,
//   });

//   // const m = res.data?.getAllTopPages || [];
//   // const menu = groupBy(m, 'firstCategory');

//   // return addApolloState(apolloClient, {
//   //   props: {
//   //     menu,
//   //     firstСategories: [TopLevelCategory.Courses]
//   //   },
//   //   revalidate: 1,
//   // });
//   const obj = {
//     menu: {},
//     firstСategories: []
//   };
//   return {
//     props: obj
//   };
// };

export default withLayout(Home);
